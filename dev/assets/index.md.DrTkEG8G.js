import{_ as n,c as p,a5 as i,j as a,a as e,G as l,B as r,o as d}from"./chunks/framework.BPz78i1f.js";const K=JSON.parse('{"title":"NeutralLandscapes.jl","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),o={name:"index.md"},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""};function R(I,s,z,H,W,$){const t=r("Badge");return d(),p("div",null,[s[93]||(s[93]=i('<h1 id="neutrallandscapes-jl" tabindex="-1">NeutralLandscapes.jl <a class="header-anchor" href="#neutrallandscapes-jl" aria-label="Permalink to &quot;NeutralLandscapes.jl&quot;">​</a></h1><p>A pure Julia port of <a href="https://github.com/tretherington/nlmpy" target="_blank" rel="noreferrer">https://github.com/tretherington/nlmpy</a></p><h2 id="Landscape-models" tabindex="-1">Landscape models <a class="header-anchor" href="#Landscape-models" aria-label="Permalink to &quot;Landscape models {#Landscape-models}&quot;">​</a></h2>',3)),a("details",h,[a("summary",null,[s[0]||(s[0]=a("a",{id:"NeutralLandscapes.NeutralLandscapeMaker",href:"#NeutralLandscapes.NeutralLandscapeMaker"},[a("span",{class:"jlbinding"},"NeutralLandscapes.NeutralLandscapeMaker")],-1)),s[1]||(s[1]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NeutralLandscapeMaker</span></span></code></pre></div><p>Abstract supertype that all algorithms are descended from. A new algorithm must minimally implement a <code>_landscape!</code> method for this type.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/landscape.jl#L3-L8" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",c,[a("summary",null,[s[3]||(s[3]=a("a",{id:"NeutralLandscapes.DiamondSquare",href:"#NeutralLandscapes.DiamondSquare"},[a("span",{class:"jlbinding"},"NeutralLandscapes.DiamondSquare")],-1)),s[4]||(s[4]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DiamondSquare </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiamondSquare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiamondSquare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(H)</span></span></code></pre></div><p>This type generates a neutral landscape using the diamond-squares algorithm, which produces fractals with variable spatial autocorrelation.</p><p><a href="https://en.wikipedia.org/wiki/Diamond-square_algorithm" target="_blank" rel="noreferrer">https://en.wikipedia.org/wiki/Diamond-square_algorithm</a></p><p>The algorithm is named diamond-square because it is an iterative procedure of &quot;diamond&quot; and &quot;square&quot; steps.</p><p>The degree of spatial autocorrelation is controlled by a parameter <code>H</code>, which varies from 0.0 (low autocorrelation) to 1.0 (high autocorrelation) –- note this is non-inclusive and H = 0 and H = 1 will not behave as expected. The result of the diamond-square algorithm is a fractal with dimension D = 2 + H.</p><p>A similar algorithm, midpoint-displacement, functions almost identically, except that in DiamondSquare, the square step interpolates edge midpoints from the nearest two corners and the square&#39;s center, where as midpoint-displacement only interpolates from the nearest corners (see <code>MidpointDisplacement</code>).</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/diamondsquare.jl#L1-L26" target="_blank" rel="noreferrer">source</a></p>`,7))]),a("details",k,[a("summary",null,[s[6]||(s[6]=a("a",{id:"NeutralLandscapes.DiscreteVoronoi",href:"#NeutralLandscapes.DiscreteVoronoi"},[a("span",{class:"jlbinding"},"NeutralLandscapes.DiscreteVoronoi")],-1)),s[7]||(s[7]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[8]||(s[8]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DiscreteVoronoi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteVoronoi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiscreteVoronoi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n)</span></span></code></pre></div><p>This type provides a rasterization of a Voronoi-like diagram. Assigns a value to each patch using a 1-NN algorithmm with <code>n</code> initial clusters. It is a <code>NearestNeighborElement</code> algorithmm with <code>k</code> neighbors set to 1. The default is to use three clusters.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/discretevoronoi.jl#L1-L11" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",u,[a("summary",null,[s[9]||(s[9]=a("a",{id:"NeutralLandscapes.DistanceGradient",href:"#NeutralLandscapes.DistanceGradient"},[a("span",{class:"jlbinding"},"NeutralLandscapes.DistanceGradient")],-1)),s[10]||(s[10]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DistanceGradient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DistanceGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; sources</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DistanceGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sources)</span></span></code></pre></div><p>The <code>sources</code> field is a <code>Vector{Integer}</code> of <em>linear</em> indices of the matrix, from which the distance must be calculated.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/distancegradient.jl#L1-L9" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",g,[a("summary",null,[s[12]||(s[12]=a("a",{id:"NeutralLandscapes.EdgeGradient",href:"#NeutralLandscapes.EdgeGradient"},[a("span",{class:"jlbinding"},"NeutralLandscapes.EdgeGradient")],-1)),s[13]||(s[13]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[14]||(s[14]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EdgeGradient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EdgeGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EdgeGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(direction)</span></span></code></pre></div><p>This type is used to generate an edge gradient landscape, where values change as a bilinear function of the <em>x</em> and <em>y</em> coordinates. The direction is expressed as a floating point value, which will be in <em>[0,360]</em>. The inner constructor takes the mod of the value passed and 360, so that a value that is out of the correct interval will be corrected.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/edgegradient.jl#L1-L12" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",b,[a("summary",null,[s[15]||(s[15]=a("a",{id:"NeutralLandscapes.MidpointDisplacement",href:"#NeutralLandscapes.MidpointDisplacement"},[a("span",{class:"jlbinding"},"NeutralLandscapes.MidpointDisplacement")],-1)),s[16]||(s[16]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[17]||(s[17]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MidpointDisplacement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MidpointDisplacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a midpoint-displacement algorithm object <code>MidpointDisplacement</code>. The degree of spatial autocorrelation is controlled by a parameter <code>H</code>, which varies from 0.0 (low autocorrelation) to 1.0 (high autocorrelation) –- note this is non-inclusive and H = 0 and H = 1 will not behave as expected.</p><p>A similar algorithm, diamond-square, functions almost identically, except that in diamond-square, the square step interpolates edge midpoints from the nearest two corners and the square&#39;s center, where as <code>MidpointDisplacement</code> only interpolates from the nearest corners (see <code>DiamondSquare</code>).</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/diamondsquare.jl#L35-L49" target="_blank" rel="noreferrer">source</a></p>`,4))]),a("details",y,[a("summary",null,[s[18]||(s[18]=a("a",{id:"NeutralLandscapes.NearestNeighborCluster",href:"#NeutralLandscapes.NearestNeighborCluster"},[a("span",{class:"jlbinding"},"NeutralLandscapes.NearestNeighborCluster")],-1)),s[19]||(s[19]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[20]||(s[20]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NearestNeighborCluster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NearestNeighborCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:rook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NearestNeighborCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p, [n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:rook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Create a random cluster nearest-neighbour neutral landscape model with values ranging 0-1. <code>p</code> sets the density of original clusters, and <code>n</code> sets the neighborhood for clustering (see <code>?label</code> for neighborhood options)</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/nncluster.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",m,[a("summary",null,[s[21]||(s[21]=a("a",{id:"NeutralLandscapes.NearestNeighborElement",href:"#NeutralLandscapes.NearestNeighborElement"},[a("span",{class:"jlbinding"},"NeutralLandscapes.NearestNeighborElement")],-1)),s[22]||(s[22]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NearestNeighborElement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NearestNeighborElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NearestNeighborElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n, [k</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Assigns a value to each patch using a k-NN algorithmm with <code>n</code> initial clusters and <code>k</code> neighbors. The default is to use three cluster and a single neighbor.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/nnelement.jl#L1-L9" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",E,[a("summary",null,[s[24]||(s[24]=a("a",{id:"NeutralLandscapes.NoGradient",href:"#NeutralLandscapes.NoGradient"},[a("span",{class:"jlbinding"},"NeutralLandscapes.NoGradient")],-1)),s[25]||(s[25]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[26]||(s[26]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NoGradient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>This type is used to generate a random landscape with no gradients</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/nogradient.jl#L1-L7" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",f,[a("summary",null,[s[27]||(s[27]=a("a",{id:"NeutralLandscapes.PerlinNoise",href:"#NeutralLandscapes.PerlinNoise"},[a("span",{class:"jlbinding"},"NeutralLandscapes.PerlinNoise")],-1)),s[28]||(s[28]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[29]||(s[29]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PerlinNoise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PerlinNoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; kw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PerlinNoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(periods, [octaves</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lacunarity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, persistance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, valley</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Create a Perlin noise neutral landscape model with values ranging 0-1.</p><p><strong>Keywords</strong></p><ul><li><p><code>periods::Tuple{Int,Int}=(1,1)</code>: the number of periods of Perlin noise across row and column dimensions for the first octave.</p></li><li><p><code>octaves::Int=1</code>: the number of octaves that will form the Perlin noise.</p></li><li><p><code>lacunarity::Int=2</code> : the rate at which the frequency of periods increases for each octive.</p></li><li><p><code>persistance::Float64=0.5</code> : the rate at which the amplitude of periods decreases for each octive.</p></li><li><p><code>valley::Symbol=</code>:u<code>: the kind of valley bottom that will be mimicked:</code>:u<code>produces u-shaped valleys,</code>:v<code>produces v-shaped valleys, and</code>:-\` produces flat bottomed valleys.</p></li></ul><p>Note: This is a memory-intensive algorithm with some settings. Be careful using larger prime numbers for <code>period</code> when also using a large array size, high lacuarity and/or many octaves. Memory use scales with the lowest common multiple of <code>periods</code>.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/perlinnoise.jl#L1-L25" target="_blank" rel="noreferrer">source</a></p>`,6))]),a("details",j,[a("summary",null,[s[30]||(s[30]=a("a",{id:"NeutralLandscapes.PlanarGradient",href:"#NeutralLandscapes.PlanarGradient"},[a("span",{class:"jlbinding"},"NeutralLandscapes.PlanarGradient")],-1)),s[31]||(s[31]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[32]||(s[32]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PlanarGradient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PlanarGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PlanarGradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(direction)</span></span></code></pre></div><p>This type is used to generate a planar gradient landscape, where values change as a bilinear function of the <em>x</em> and <em>y</em> coordinates. The direction is expressed as a floating point value, which will be in <em>[0,360]</em>. The inner constructor takes the mod of the value passed and 360, so that a value that is out of the correct interval will be corrected.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/planargradient.jl#L1-L12" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",C,[a("summary",null,[s[33]||(s[33]=a("a",{id:"NeutralLandscapes.RectangularCluster",href:"#NeutralLandscapes.RectangularCluster"},[a("span",{class:"jlbinding"},"NeutralLandscapes.RectangularCluster")],-1)),s[34]||(s[34]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RectangularCluster </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectangularCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; minimum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maximum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectangularCluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(minimum, [maximum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Fills the landscape with rectangles containing a random value. The size of each rectangle/patch is between <code>minimum</code> and <code>maximum</code> (the two can be equal for a fixed size rectangle).</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/rectangularcluster.jl#L1-L10" target="_blank" rel="noreferrer">source</a></p>`,3))]),a("details",F,[a("summary",null,[s[36]||(s[36]=a("a",{id:"NeutralLandscapes.WaveSurface",href:"#NeutralLandscapes.WaveSurface"},[a("span",{class:"jlbinding"},"NeutralLandscapes.WaveSurface")],-1)),s[37]||(s[37]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[38]||(s[38]=i(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WaveSurface </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeMaker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WaveSurface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), periods</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WaveSurface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(direction, [periods</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Creates a sinusoidal landscape with a <code>direction</code> and a number of <code>periods</code>. If neither are specified, there will be a single period of random direction.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/makers/wavesurface.jl#L1-L9" target="_blank" rel="noreferrer">source</a></p>`,3))]),s[94]||(s[94]=a("h2",{id:"Landscape-generating-function",tabindex:"-1"},[e("Landscape generating function "),a("a",{class:"header-anchor",href:"#Landscape-generating-function","aria-label":'Permalink to "Landscape generating function {#Landscape-generating-function}"'},"​")],-1)),a("details",v,[a("summary",null,[s[39]||(s[39]=a("a",{id:"Base.rand",href:"#Base.rand"},[a("span",{class:"jlbinding"},"Base.rand")],-1)),s[40]||(s[40]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[41]||(s[41]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alg, dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Vararg{Int64,2}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; mask</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Creates a landscape of size <code>dims</code> (a tuple of two integers) following the model defined by <code>alg</code>. The <code>mask</code> argument accepts a matrix of boolean values, and is passed to <code>mask!</code> if it is not <code>nothing</code>.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/landscape.jl#L11-L17" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",L,[a("summary",null,[s[42]||(s[42]=a("a",{id:"Random.rand!",href:"#Random.rand!"},[a("span",{class:"jlbinding"},"Random.rand!")],-1)),s[43]||(s[43]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[44]||(s[44]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mat, alg) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {IT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Fill the matrix <code>mat</code> with a landscape created following the model defined by <code>alg</code>. The <code>mask</code> argument accepts a matrix of boolean values, and is passed to <code>mask!</code> if it is not <code>nothing</code>.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/landscape.jl#L24-L30" target="_blank" rel="noreferrer">source</a></p>',3))]),s[95]||(s[95]=a("h2",{id:"Temporal-Change",tabindex:"-1"},[e("Temporal Change "),a("a",{class:"header-anchor",href:"#Temporal-Change","aria-label":'Permalink to "Temporal Change {#Temporal-Change}"'},"​")],-1)),a("details",N,[a("summary",null,[s[45]||(s[45]=a("a",{id:"NeutralLandscapes.NeutralLandscapeUpdater",href:"#NeutralLandscapes.NeutralLandscapeUpdater"},[a("span",{class:"jlbinding"},"NeutralLandscapes.NeutralLandscapeUpdater")],-1)),s[46]||(s[46]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[47]||(s[47]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NeutralLandscapeUpdater</span></span></code></pre></div><p>NeutralLandscapeUpdater is an abstract type for methods for updating a landscape matrix</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L1-L6" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",T,[a("summary",null,[s[48]||(s[48]=a("a",{id:"NeutralLandscapes.TemporallyVariableUpdater",href:"#NeutralLandscapes.TemporallyVariableUpdater"},[a("span",{class:"jlbinding"},"NeutralLandscapes.TemporallyVariableUpdater")],-1)),s[49]||(s[49]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[50]||(s[50]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TemporallyVariableUpdater{D,S} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NeutralLandscapeUpdater</span></span></code></pre></div><p>A <code>NeutralLandscapeUpdater</code> that has a prescribed level of temporal variation (<code>variability</code>) and rate of change (<code>rate</code>), but no spatial correlation in where change is distributed.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/temporal.jl#L1-L7" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",B,[a("summary",null,[s[51]||(s[51]=a("a",{id:"NeutralLandscapes.SpatiallyAutocorrelatedUpdater",href:"#NeutralLandscapes.SpatiallyAutocorrelatedUpdater"},[a("span",{class:"jlbinding"},"NeutralLandscapes.SpatiallyAutocorrelatedUpdater")],-1)),s[52]||(s[52]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[53]||(s[53]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpatiallyAutocorrelatedUpdater{SU,R,V}</span></span></code></pre></div><p>A <code>NeutralLandscapeUpdater</code> that has a prescribed level of spatial variation (<code>variability</code>) and rate of change (<code>rate</code>), and where the spatial distribution of this change is proportional to a neutral landscape generated with <code>spatialupdater</code> at every time step.</p><p>TODO: make it possible to fix a given spatial updater at each timestep.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/spatial.jl#L2-L12" target="_blank" rel="noreferrer">source</a></p>',4))]),a("details",x,[a("summary",null,[s[54]||(s[54]=a("a",{id:"NeutralLandscapes.SpatiotemporallyAutocorrelatedUpdater",href:"#NeutralLandscapes.SpatiotemporallyAutocorrelatedUpdater"},[a("span",{class:"jlbinding"},"NeutralLandscapes.SpatiotemporallyAutocorrelatedUpdater")],-1)),s[55]||(s[55]=e()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[56]||(s[56]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpatiotemporallyAutocorrelatedUpdater{SU,R,V}</span></span></code></pre></div><p>A <code>NeutralLandscapeUpdater</code> that has a prescribed level of spatial and temporal variation (<code>variability</code>) and rate of change (<code>rate</code>), and where the spatial distribution of this change is proportional to a neutral landscape generated with <code>spatialupdater</code> at every time step.</p><p>TODO: perhaps spatial and temporal should each have their own variability param</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/spatiotemporal.jl#L2-L12" target="_blank" rel="noreferrer">source</a></p>',4))]),a("details",D,[a("summary",null,[s[57]||(s[57]=a("a",{id:"NeutralLandscapes.update",href:"#NeutralLandscapes.update"},[a("span",{class:"jlbinding"},"NeutralLandscapes.update")],-1)),s[58]||(s[58]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[59]||(s[59]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(updater</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mat)</span></span></code></pre></div><p>Returns one-timestep applied to <code>mat</code> based on the <code>NeutralLandscapeUpdater</code> provided (<code>updater</code>).</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L54-L59" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(updater</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mat, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">I</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a sequence of length <code>n</code> where the original neutral landscape <code>mat</code> is updated by the <code>NeutralLandscapeUpdater</code> <code>update</code> for <code>n</code> timesteps.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L65-L70" target="_blank" rel="noreferrer">source</a></p>',6))]),a("details",A,[a("summary",null,[s[60]||(s[60]=a("a",{id:"NeutralLandscapes.update!",href:"#NeutralLandscapes.update!"},[a("span",{class:"jlbinding"},"NeutralLandscapes.update!")],-1)),s[61]||(s[61]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[62]||(s[62]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">update!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(updater</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mat)</span></span></code></pre></div><p>Updates a landscape <code>mat</code> in-place by directly mutating <code>mat</code>.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L81-L85" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",w,[a("summary",null,[s[63]||(s[63]=a("a",{id:"NeutralLandscapes.normalize",href:"#NeutralLandscapes.normalize"},[a("span",{class:"jlbinding"},"NeutralLandscapes.normalize")],-1)),s[64]||(s[64]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[65]||(s[65]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mats</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{M}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Normalizes a vector of neutral landscapes <code>mats</code> such that all values between 0 and 1. Note that this does not preserve the <code>rate</code> parameter for a given <code>NeutralLandscapeUpdater</code>, and instead rescales it proportional to the difference between the total maximum and total minimum across all <code>mats</code>.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L35-L42" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",O,[a("summary",null,[s[66]||(s[66]=a("a",{id:"NeutralLandscapes.rate",href:"#NeutralLandscapes.rate"},[a("span",{class:"jlbinding"},"NeutralLandscapes.rate")],-1)),s[67]||(s[67]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[68]||(s[68]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spatialupdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NeutralLandscapeUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>All <code>NeutralLandscapeUpdater</code>s have a field <code>rate</code> which defines the expected (or mean) change across all cells per timestep.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L9-L14" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",U,[a("summary",null,[s[69]||(s[69]=a("a",{id:"NeutralLandscapes.variability",href:"#NeutralLandscapes.variability"},[a("span",{class:"jlbinding"},"NeutralLandscapes.variability")],-1)),s[70]||(s[70]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[71]||(s[71]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">variability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NeutralLandscapeUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the <code>variability</code> of a given <code>NeutralLandscapeUpdater</code>. The variability of an updater is how much temporal variation there will be in a generated time-series of landscapes.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L26-L32" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",J,[a("summary",null,[s[72]||(s[72]=a("a",{id:"NeutralLandscapes.spatialupdater",href:"#NeutralLandscapes.spatialupdater"},[a("span",{class:"jlbinding"},"NeutralLandscapes.spatialupdater")],-1)),s[73]||(s[73]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[74]||(s[74]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spatialupdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(up</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NeutralLandscapeUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>All <code>NeutralLandscapeUpdater</code>&#39;s have a <code>spatialupdater</code> field which is either a <code>NeutralLandscapeMaker</code>, or <code>Missing</code> (in the case of temporally correlated updaters).</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/update.jl#L17-L23" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",q,[a("summary",null,[s[75]||(s[75]=a("a",{id:"NeutralLandscapes._update",href:"#NeutralLandscapes._update"},[a("span",{class:"jlbinding"},"NeutralLandscapes._update")],-1)),s[76]||(s[76]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[77]||(s[77]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tvu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TemporallyVariableUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mat)</span></span></code></pre></div><p>Updates <code>mat</code> using temporally autocorrelated change, using the direction and rate parameters from <code>tvu</code>.</p><p>TODO: this doesn&#39;t have to be a Normal distribution, could be arbitrary distribution that is continuous and can have mean 0 (or that can be transformed to have mean 0)</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/temporal.jl#L14-L23" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sau</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpatiallyAutocorrelatedUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mat; transform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ZScoreTransform)</span></span></code></pre></div><p>Updates <code>mat</code> using spatially autocorrelated change, using the direction, rate, and spatial updater parameters from <code>sau</code>.</p><p>TODO: doesn&#39;t necessarily have to be a ZScoreTransform, could be arbitrary argument</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/spatial.jl#L19-L27" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stau</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpatiotemporallyAutocorrelatedUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mat)</span></span></code></pre></div><p>Updates <code>mat</code> using temporally autocorrelated change, using the direction, rate, and spatialupdater parameters from <code>stau</code>.</p><p>TODO: doesn&#39;t necessarily have to be a Normal distribution or ZScoreTransform, could be arbitrary argument</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/updaters/spatiotemporal.jl#L20-L28" target="_blank" rel="noreferrer">source</a></p>',12))]),s[96]||(s[96]=a("h2",{id:"Other-functions",tabindex:"-1"},[e("Other functions "),a("a",{class:"header-anchor",href:"#Other-functions","aria-label":'Permalink to "Other functions {#Other-functions}"'},"​")],-1)),a("details",S,[a("summary",null,[s[78]||(s[78]=a("a",{id:"NeutralLandscapes.classify",href:"#NeutralLandscapes.classify"},[a("span",{class:"jlbinding"},"NeutralLandscapes.classify")],-1)),s[79]||(s[79]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[80]||(s[80]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array, weights[, mask])</span></span></code></pre></div><p>Classify an array into proportions based upon a list of class weights.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/classify.jl#L22-L26" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",M,[a("summary",null,[s[81]||(s[81]=a("a",{id:"NeutralLandscapes.classify!",href:"#NeutralLandscapes.classify!"},[a("span",{class:"jlbinding"},"NeutralLandscapes.classify!")],-1)),s[82]||(s[82]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[83]||(s[83]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">classify!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array, weights[, mask])</span></span></code></pre></div><p>Classify an array in-place into proportions based upon a list of class weights.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/classify.jl#L1-L5" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",G,[a("summary",null,[s[84]||(s[84]=a("a",{id:"NeutralLandscapes.blend",href:"#NeutralLandscapes.blend"},[a("span",{class:"jlbinding"},"NeutralLandscapes.blend")],-1)),s[85]||(s[85]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[86]||(s[86]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arrays[, scaling])</span></span></code></pre></div><p>Blend arrays weighted by scaling factors.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/classify.jl#L49-L53" target="_blank" rel="noreferrer">source</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterarray, arrays[, scaling])</span></span></code></pre></div><p>Blend a primary cluster NLM with other arrays in which the mean value per cluster is weighted by scaling factors.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/classify.jl#L62-L67" target="_blank" rel="noreferrer">source</a></p>',6))]),a("details",P,[a("summary",null,[s[87]||(s[87]=a("a",{id:"NeutralLandscapes.label",href:"#NeutralLandscapes.label"},[a("span",{class:"jlbinding"},"NeutralLandscapes.label")],-1)),s[88]||(s[88]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[89]||(s[89]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mat[, neighborhood </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :rook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Assign an arbitrary label to all clusters of contiguous matrix elements with the same value. Returns a matrix of values and the total number of final clusters. The <code>neighborhood</code> structure can be <code>:rook</code> <code>:queen</code> <code>:diagonal</code> 0 1 0 1 1 1 0 1 1 1 x 1 1 x 1 1 x 1 0 1 0 1 1 1 1 1 0 <code>:rook</code> is the default</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/classify.jl#L81-L92" target="_blank" rel="noreferrer">source</a></p>',3))]),a("details",V,[a("summary",null,[s[90]||(s[90]=a("a",{id:"NeutralLandscapes.mask!",href:"#NeutralLandscapes.mask!"},[a("span",{class:"jlbinding"},"NeutralLandscapes.mask!")],-1)),s[91]||(s[91]=e()),l(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[92]||(s[92]=i('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mask!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, maskarray</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractBool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Modifies <code>array</code> so that the positions at which <code>maskarray</code> is <code>false</code> are replaced by <code>NaN</code>.</p><p><a href="https://github.com/EcoJulia/NeutralLandscapes.jl/blob/db7777983e8302d7a3fcfe0d250d093bb35e2980/src/landscape.jl#L37-L42" target="_blank" rel="noreferrer">source</a></p>',3))])])}const Q=n(o,[["render",R]]);export{K as __pageData,Q as default};
